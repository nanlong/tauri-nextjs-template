fail_fast: false
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: fix-byte-order-marker
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: end-of-file-fixer
        exclude: ^LICENSE.*$
      - id: mixed-line-ending
      - id: trailing-whitespace

  - repo: https://github.com/ComPWA/taplo-pre-commit
    rev: v0.9.3
    hooks:
      - id: taplo-format
        files: ^src-tauri/.*\.(toml)$

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, css, json]
        exclude: ^src-tauri/

  - repo: local
    hooks:
      - id: check-cargo-tools
        name: Check cargo tools
        description: Check required cargo tools are installed
        entry: bash -c 'cargo install cargo-nextest'
        language: rust
        pass_filenames: false
        stages: [commit]

      - id: cargo-fmt
        name: cargo fmt
        description: Format files with rustfmt.
        entry: bash -c 'cd src-tauri && cargo fmt -- --check'
        language: rust
        files: ^src-tauri/.*\.rs$
        pass_filenames: false

      - id: typos
        name: typos
        description: check typo
        entry: bash -c 'typos'
        language: rust
        files: \.*$
        pass_filenames: false

      - id: cargo-check
        name: cargo check
        description: Check the package for errors.
        entry: bash -c 'cd src-tauri && cargo check --all'
        language: rust
        files: ^src-tauri/.*\.rs$
        pass_filenames: false

      - id: cargo-clippy
        name: cargo clippy
        description: Lint rust sources
        entry: bash -c 'cd src-tauri && cargo clippy --all-targets --all-features --tests --benches -- -D warnings'
        language: rust
        files: ^src-tauri/.*\.rs$
        pass_filenames: false

      - id: cargo-test
        name: cargo test
        description: unit test for the project
        entry: bash -c 'cd src-tauri && cargo nextest run --all-features --workspace'
        language: rust
        files: ^src-tauri/.*\.rs$
        pass_filenames: false

      - id: next-lint
        name: next lint
        description: Run Next.js linting
        entry: bash -c 'npm run lint'
        language: node
        files: ^src-nextjs/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false

      - id: next-typecheck
        name: TypeScript type checking
        description: Check TypeScript types
        entry: bash -c 'npm run typecheck'
        language: node
        files: ^src-nextjs/.*\.(ts|tsx)$
        pass_filenames: false

      - id: next-test
        name: next test
        description: Run Next.js tests
        entry: bash -c 'npm run test'
        language: node
        files: ^src-nextjs/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false
